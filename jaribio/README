== Business Model

Test Cases - consists of steps to execute and expectations
Test Plans - a grouping of one or more test cases
Issues - issues represent some foreign resource for which there should be
a test plan; so these could be new features, improvements, or bugs

Additionally, we want to also store the results of executing a test plan, 
marking a test case as pass, fail, with a default value indicating the
test case was not executed.

A test plan can be executed multiple times.

Executed Test Plan - the stored results of executing a test plan

== Data Model

cases
id|user_id|text|expectations|timestamps

plans
id|user_id|name|timestamps

cases_plans - relation table for test case to/from test plan
case_id|plan_id|user_id

issues
id|name|url

cases_issues - relation table for issues to/from test plans
case_id|issue_id|user_id

executions - record information about executing cases for a plan or issue
id|plan_id|issue_id|user_id|timestamps|environment?

cases_executions - record the result of executing a test case
execution_id|case_id|user_id|created_at|status_code

users
- using devise standard schema here

Supported queries necessary to Jaribio:
* List of test cases
* List of test plans
* List of test cases within a test plan
* List of test cases for an issue
* Current status of a test case
* Status of each test case for each time it was executed for a given test plan

* Who created a case
* Who associated a case to a plan
* Who associated a case to an issue
* Who has executed a case

TODO:
* Should probably have some means of describing environments other than
text; discuss with team.

